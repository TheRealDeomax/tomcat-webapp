events {
    worker_connections 1024;
}

http {
    upstream tomcat_backend {
        # Load balancing method: round-robin (default)
        # Other options: least_conn, ip_hash
        
        server tomcat1:8080 max_fails=3 fail_timeout=30s;
        server tomcat2:8080 max_fails=3 fail_timeout=30s;
        server tomcat3:8080 max_fails=3 fail_timeout=30s;
    }

    # Health check endpoint
    upstream tomcat_health {
        server tomcat1:8080;
        server tomcat2:8080;
        server tomcat3:8080;
    }

    server {
        listen 80;
        listen 8080;
        server_name localhost;

        # Main application traffic
        location / {
            proxy_pass http://tomcat_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Enable session affinity if needed (sticky sessions)
            # proxy_set_header Cookie $http_cookie;
        }

        # Manager app - route to all instances for management
        location /manager/ {
            proxy_pass http://tomcat_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Host manager app
        location /host-manager/ {
            proxy_pass http://tomcat_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status (optional)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}
